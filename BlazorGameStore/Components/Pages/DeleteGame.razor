@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@rendermode InteractiveServer

<div class="modal fade" id="@GetGameSummaryId(Game)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@Title</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@ConfirmAsync">Delete</button>
            </div>
        </div>
    </div>
</div>



@code {

    [Parameter]
    public GameSummary? Game { get; set; }

    private string? Title { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        Title = $"Delete {Game?.Name}?";

    }

    public static string? GetGameSummaryId(GameSummary summary)
    {
        ArgumentNullException.ThrowIfNull(summary);
        return $"deleteModal-{summary.Id}";
    }

    private async Task ConfirmAsync()
    {
        await GamesClient.DeleteGameAsync(Game!.Id);
        NavigationManager.Refresh();
    }
}
